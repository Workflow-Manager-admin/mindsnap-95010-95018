{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "Main application component (App.js) for a note-taking web app built with React. Manages state for notes, filtering, searching, sorting, and renders child components including Header, NoteInput, Filters, and NoteList. Handles loading/saving notes from local storage and provides functions for adding, updating, and deleting notes.", "external_files": ["./components/Header", "./components/NoteInput", "./components/Filters", "./components/NoteList", "./utils/storage", "./utils/noteUtils", "./assets/brain-bg-1.svg", "./assets/brain-bg-2.svg", "./App.css"], "external_methods": ["loadNotes", "saveNotes", "createNote", "updateNote", "searchNotes", "filterNotesByType", "sortNotes"], "published": [], "classes": [], "methods": [{"name": "App()", "description": "Main React functional component for the application.", "scope": "", "scopeKind": ""}, {"name": "handleAddNote", "description": "Creates a new note and adds it to the state."}, {"name": "handleUpdateNote", "description": "Updates an existing note in the state."}, {"name": "handleDeleteNote", "description": "Removes a note from the state based on its ID."}, {"name": "getFilteredNotes", "description": "Applies filtering, searching, and sorting to notes to produce the display list."}], "calls": ["loadNotes()", "saveNotes(notes)", "createNote(content, type)", "updateNote(note, updates)", "filterNotesByType(filteredNotes, selectedType)", "searchNotes(filteredNotes, searchQuery)", "sortNotes(filteredNotes, sortBy)"], "search-terms": ["React App component", "filterNotesByType", "NoteInput", "localStorage", "searchNotes", "sortNotes", "useState", "useEffect"], "state": 2, "file_id": 5, "knowledge_revision": 81, "git_revision": "0c72984fb6174a89f094432fc0dc9f1e6957ab52", "revision_history": [{"26": "a5356d9a4797f00b016323404197e1871e89e159"}, {"50": "dd2fe734eced361e9bab421a9ce83f7c70a1d183"}, {"59": "df2d8ca2abb4efa98a11f9897414e7f3073b3d5b"}, {"81": "0c72984fb6174a89f094432fc0dc9f1e6957ab52"}], "ctags": [{"_type": "tag", "name": "App", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^function App() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "displayedNotes", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                notes={displayedNotes}$/", "language": "JavaScript", "kind": "field", "scope": "App.notes", "scopeKind": "class"}, {"_type": "tag", "name": "handleDeleteNote", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                onDeleteNote={handleDeleteNote}$/", "language": "JavaScript", "kind": "field", "scope": "App.onDeleteNote", "scopeKind": "class"}, {"_type": "tag", "name": "handleUpdateNote", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                onUpdateNote={handleUpdateNote}$/", "language": "JavaScript", "kind": "field", "scope": "App.onUpdateNote", "scopeKind": "class"}, {"_type": "tag", "name": "searchQuery", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                searchQuery={searchQuery}$/", "language": "JavaScript", "kind": "field", "scope": "App.searchQuery", "scopeKind": "class"}, {"_type": "tag", "name": "selectedType", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                selectedType={selectedType}$/", "language": "JavaScript", "kind": "field", "scope": "App.selectedType", "scopeKind": "class"}, {"_type": "tag", "name": "setSearchQuery", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                onSearchChange={setSearchQuery}$/", "language": "JavaScript", "kind": "field", "scope": "App.onSearchChange", "scopeKind": "class"}, {"_type": "tag", "name": "setSelectedType", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                onTypeChange={setSelectedType}$/", "language": "JavaScript", "kind": "field", "scope": "App.onTypeChange", "scopeKind": "class"}, {"_type": "tag", "name": "setSortBy", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                onSortChange={setSortBy}$/", "language": "JavaScript", "kind": "field", "scope": "App.onSortChange", "scopeKind": "class"}, {"_type": "tag", "name": "sortBy", "path": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "pattern": "/^                sortBy={sortBy}$/", "language": "JavaScript", "kind": "field", "scope": "App.sortBy", "scopeKind": "class"}], "filename": "/home/kavia/workspace/code-generation/mindsnap-95010-95018/main_container_for_mindsnap/src/App.js", "hash": "984098c3b5e6fb2da1cc2a81d27282d6", "format-version": 4, "code-base-name": "default", "fields": [{"name": "notes={displayedNotes}", "scope": "App.notes", "scopeKind": "class", "description": "unavailable"}, {"name": "onDeleteNote={handleDeleteNote}", "scope": "App.onDeleteNote", "scopeKind": "class", "description": "unavailable"}, {"name": "onUpdateNote={handleUpdateNote}", "scope": "App.onUpdateNote", "scopeKind": "class", "description": "unavailable"}, {"name": "searchQuery={searchQuery}", "scope": "App.searchQuery", "scopeKind": "class", "description": "unavailable"}, {"name": "selectedType={selectedType}", "scope": "App.selectedType", "scopeKind": "class", "description": "unavailable"}, {"name": "onSearchChange={setSearchQuery}", "scope": "App.onSearchChange", "scopeKind": "class", "description": "unavailable"}, {"name": "onTypeChange={setSelectedType}", "scope": "App.onTypeChange", "scopeKind": "class", "description": "unavailable"}, {"name": "onSortChange={setSortBy}", "scope": "App.onSortChange", "scopeKind": "class", "description": "unavailable"}, {"name": "sortBy={sortBy}", "scope": "App.sortBy", "scopeKind": "class", "description": "unavailable"}]}